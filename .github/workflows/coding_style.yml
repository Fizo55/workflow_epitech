name: Check coding style
on: push

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Check coding style
        run: |
          check.sh ${GITHUB_WORKSPACE} ${GITHUB_WORKSPACE} | tee coding-style-reports.log
          exit_code=$?
          if [ $exit_code -ne 0 ]; then
            echo "Failed with exit code $exit_code"
            exit $exit_code
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.EPITECH_TOKEN }}
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Parse and set error outputs
        if: always()
        id: parse-errors
        run: |
          errors=""
          while IFS=: read -r file line_number severity code message; do
            filename=$(basename "$file")
            errors="${errors}{\"path\":\"${file}\",\"start_line\":${line_number},\"end_line\":${line_number},\"annotation_level\":\"failure\",\"message\":\"[${code}] ${message}\"},"
          done < coding-style-reports.log
          errors="${errors%?}"
          echo "::set-output name=errors::[$errors]"
      - name: Create error annotations
        if: always()
        run: |
          if [ -s "${GITHUB_WORKSPACE}/coding-style-reports.log" ]; then
            echo "Coding style errors detected"
            while IFS=: read -r file line_number severity code message; do
              filename=$(basename "$file")
              payload=$(echo '{}' | jq --arg path "$file" --arg line_number "$line_number" --arg severity "$severity" --arg code "$code" --arg message "$message" '.path=$path | .start_line=($line_number|tonumber) | .end_line=($line_number|tonumber) | .annotation_level=$severity | .message="["+$code+"] "+$message')
              echo "$payload" | jq '. |= {"path": .path, "start_line": .start_line, "end_line": .end_line, "annotation_level": .annotation_level, "message": .message}'
              curl -s -X POST -H "Accept: application/vnd.github.v3+json" -H "Authorization: Bearer ${GITHUB_TOKEN}" "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/check-runs/${GITHUB_RUN_ID}/annotations" -d "$payload"
            done < coding-style-reports.log
            exit 1
          else
            echo "No coding style errors detected"
          fi
      - name: Check report
        if: always()
        run: |
          if [ -s "${GITHUB_WORKSPACE}/coding-style-reports.log" ]; then
            echo "Coding style errors detected"
            exit 1
          else
            echo "No coding style errors detected"
          fi
